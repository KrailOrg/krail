<?xml version="1.0"?>
<!DOCTYPE project>
<project basedir="." default="build-pakage-and-publish" xmlns:ivy="antlib:org.apache.ivy.ant" name="Build script">

	<loadproperties srcfile="build.properties" />
	<property name="workdir" value="${artifacts}/work" />
	<property name="builddir" value="${workdir}/build" />

	<path id="classpath">
		<fileset dir="${libraries}" erroronmissingdir="no">
			<include name="*.jar" />
		</fileset>
		<path refid="ivy.deps.default" />
	</path>

	<target name="clean">
		<delete dir="${artifacts}" />
	</target>

	<target name="init">
		<mkdir dir="${workdir}" />
	</target>

	<target name="resolve">
		<ivy:resolve file="ivy.xml" />
		<ivy:cachepath pathid="ivy.deps.default" conf="default" />
		<ivy:cachefileset setid="ivy.deps.default.fileset" conf="default" />
	</target>

	<target name="report" depends="resolve">
		<ivy:report todir="${workdir}" />
	</target>

	<target name="compile" depends="clean, init, resolve">
		<delete dir="${builddir}" />
		<mkdir dir="${builddir}" />
		<javac destdir="${builddir}" debug="${compile.debug}" includeantruntime="no">
			<src path="${sources}" />
			<classpath refid="classpath" />
		</javac>
	</target>

	<available file=".git" type="dir" property="git.present" />
	<target name="git.revision" description="Store git revision in ${repository.version}" if="git.present">
		<exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
			<arg value="rev-parse" />
			<arg value="HEAD" />
		</exec>
		<condition property="repository.version" value="${git.revision}" else="unknown">
			<and>
				<isset property="git.revision" />
				<length string="${git.revision}" trim="yes" length="0" when="greater" />
			</and>
		</condition>
	</target>

	<target name="pakage" depends="init, increment-build, version, git.revision" description="Packages everything in a JAR that has been deployed in ${workdir}">
		<jar destfile="${artifacts}/${jarfilename}.jar" basedir="${builddir}" includes="**/*.*">
			<manifest>
				<!-- <attribute name="Built-By" value="${user.name}"/> -->
				<section name="common">
					<attribute name="git-commit" value="${repository.version}" />
					<attribute name="version" value="${version}" />
				</section>
			</manifest>
		</jar>

		<jar destfile="${artifacts}/${jarfilename}-sources.jar" basedir="${sources}" includes="**/*.*">
			<manifest>
				<!-- <attribute name="Built-By" value="${user.name}"/> -->
				<section name="common">
					<attribute name="git-commit" value="${repository.version}" />
					<attribute name="version" value="${version}" />
				</section>
			</manifest>
		</jar>
	</target>

	<target name="build-and-pakage" depends="compile, pakage">
	</target>

	<target name="now">
		<tstamp>
			<format property="now" pattern="yyyyMMddHHmmss" />
		</tstamp>
	</target>

	<target name="increment-build">
		<propertyfile file="build.properties">
			<entry key="module.version.build" type="int" operation="+" value="1" pattern="0" />
		</propertyfile>
	</target>

	<target name="version">
		<property name="version" value="${module.version.major}.${module.version.minor}.${module.version.revision}.${module.version.build}-${module.version.qualifier}" />
	</target>

	<target name="publish-local" depends="now, version" description="--> publish this project in the local ivy repository">
		<ivy:deliver deliverpattern="${artifacts}/ivy.xml" pubrevision="${version}" status="integration" />
		<ivy:publish resolver="local" pubrevision="${version}" pubdate="${now}" status="integration" overwrite="true">
			<artifacts pattern="${artifacts}/[artifact].[ext]" />
		</ivy:publish>
		<echo message="project ${ant.project.name} published locally with version ${version}" />
	</target>

	<target name="pakage-and-publish-local" depends="resolve, pakage, publish-local">
	</target>

	<target name="build-pakage-and-publish-local" depends="compile, pakage-and-publish-local">
	</target>

	<target name="publish-nexus-snaphots" depends="resolve, now, version" description="--> publish this project in the network ivy repository">
		<ivy:deliver deliverpattern="${artifacts}/ivy.xml" pubrevision="${version}" status="integration" />
		<ivy:publish resolver="nexus-snaphots" pubrevision="${version}" pubdate="${now}" status="integration" overwrite="true">
			<artifacts pattern="${artifacts}/[artifact].[ext]" />
		</ivy:publish>
		<echo message="project ${ant.project.name} published to nexus with version ${version}" />
	</target>

	<target name="build-pakage-and-publish" depends="resolve, compile, pakage, publish-local, publish-nexus-snaphots">
	</target>
</project>